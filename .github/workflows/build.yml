name: Rust Build and Publish

on:
  push:
    branches:
      - gui
    tags:
      - '*'

env:
  CRATE_NAME: cracker_gui

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install cross
        run: cargo install cross

      - name: Install dependencies
        run: sudo apt-get install -y libgtk-3-dev libglib2.0-dev

      - name: Set PKG_CONFIG_PATH
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v2

      - name: Build and publish binaries
        run: |
          cross build --target x86_64-unknown-linux-musl --release
          cross build --target x86_64-pc-windows-gnu --release
          cross build --target x86_64-apple-darwin --release
          mv target/x86_64-unknown-linux-musl/release/$CRATE_NAME bedrock_cracker-linux
          mv target/x86_64-pc-windows-gnu/release/$CRATE_NAME.exe bedrock_cracker-windows.exe
          mv target/x86_64-apple-darwin/release/$CRATE_NAME bedrock_cracker-macos

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: bedrock_cracker-binaries
          path: |
            bedrock_cracker-linux
            bedrock_cracker-windows.exe
            bedrock_cracker-macos

  create_release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            ./bedrock_cracker-linux
            ./bedrock_cracker-windows.exe
            ./bedrock_cracker-macos
          asset_name: |
            bedrock_cracker-linux
            bedrock_cracker-windows.exe
            bedrock_cracker-macos
          asset_content_type: |
            application/octet-stream
            application/octet-stream
            application/octet-stream