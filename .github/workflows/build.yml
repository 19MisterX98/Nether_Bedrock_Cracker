name: Publish

on: [push]

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Release
          draft: false
          prerelease: false
          
  release_assets:
    name: Release assets for ${{ matrix.os }}
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
          linux,
          windows,
          macos
        ]

        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: target/release/bedrock_cracker
            asset_name: bedrock_cracker-linux
          - name: windows
            os: windows-latest
            artifact_name: target/release/bedrock_cracker.exe
            asset_name: bedrock_cracker-windows
          - name: macos
            os: macos-latest
            artifact_name: target/release/bedrock_cracker
            asset_name: bedrock_cracker-macos

    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build
        run: cargo build --release --locked

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: ${{ matrix.asset_name }}
          asset_path: ${{ matrix.artifact_name }}
          asset_content_type: application/octet-stream
